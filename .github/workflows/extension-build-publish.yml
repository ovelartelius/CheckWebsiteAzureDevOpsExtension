name: Build and publish Azure DevOps extension

on:
  #push:
  #  branches:
  #    - release/*
  pull_request:
    branches:
      - release/*
  workflow_dispatch: # Allow manuel trigger of the workflow

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the Repository
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get extension version
        shell: pwsh
        # env:
        #   MY_SECRET: ${{ secrets.MY_SECRET }}
        run: |
          $version = (Get-Content src/vss-extension.json) -join "`n" | ConvertFrom-Json | Select -ExpandProperty "version"
          $buildNumber = $env:GITHUB_RUN_NUMBER
          $extVersion = "v$version-$buildNumber"
          Write-Host "Try to set ExtensionVersion to $extVersion"
          Add-Content -Path $env:GITHUB_ENV -Value "ExtensionVersion=$extVersion"

      - name: Copy scripts
        shell: pwsh
        run: |
          ./BuildScripts/CopyScripts.ps1

      - name: Install tfx-cli
        run: npm install -g tfx-cli #npm install -g tfx-cli@0.18.x

      - name: tfx extension create help
        run: tfx extension create --help

      # Step 5: Package the extension
      - name: Package Extension
        run: tfx extension create --root "src" --manifests "vss-extension.json" --outputPath "checkwebsite-extension-$env:ExtensionVersion.vsix" --json

      # # Step 2: Set up Node.js environment
      # - name: Set up Node.js
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: '16' # Adjust based on your project's requirements

      # - name: Install tfx-cli
      #   run: npm install -g tfx-cli@0.17.x

      # # Step 3: Install dependencies
      # - name: Install dependencies
      #   run: npm install

      # # Step 4: Build the extension
      # - name: Build Azure DevOps Extension
      #   run: npm run build # Update if your build script is different

      # # Step 5: Package the extension
      # - name: Package Extension
      #   run: tfx extension create --manifest-globs src/vss-extension.json

      # Step 6: Publish to Visual Studio Marketplace
      - name: Publish Extension to Visual Studio Marketplace
        env:
          PUBLISHER_ID: ${{ secrets.EPINOVA_VS_MARKETPLACE_PUBLISHER_ID }}
          PERSONAL_ACCESS_TOKEN: ${{ secrets.EPINOVA_VS_MARKETPLACE_PAT }}
        run: |
          tfx extension publish \
            --publisher $PUBLISHER_ID \
            --service-url https://marketplace.visualstudio.com \
            --vsix-file *.vsix \
            --token $PERSONAL_ACCESS_TOKEN